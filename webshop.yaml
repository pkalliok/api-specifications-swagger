---
openapi: '3.0.0'
info:
  title: Talpa webshop API
  description: |
    Gives trusted City of Helsinki services (such as respa,
    boat-berth-backend and linked courses) means to have users pay for
    City of Helsinki products, such as reserved cottages, participation
    on courses or boat berths.

    Works as a registry of existing products and users' orders and
    tracks which orders have been paid and which have not.
  version: 0.1

paths:
  /product:
    post:
      summary: create a new product card
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        '201':
          description: new product successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  /product/{id}:
    parameters:
      - in: path
        name: id
        required: true
        type: string
    get:
      summary: fetch product info by id or externalProductCode
      responses:
        '200':
          description: product object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    delete:
      summary: remove a product card by id or externalProductCode
      responses:
        '204':
          description: product successfully removed
    put:
      summary: update a product card by id or externalProductCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"

components:
  schemas:

    Product:
      description: Information about a product that can be sold.
      properties:
        id:
          type: string
        slug:
          type: string
          description: human-readable identifier for product
        externalProductCode:
          type: string
          description: identifier for this product in other systems
        unitPrice:
          type: integer
          description: net price per unit, in euro cents
        unit:
          type: string
          description: in what units the product is sold, e.g. item, hour, day, participant
        description:
          type: string
          description: free text description of product
        imageUrl:
          type: string
          description: URL for image of product
        bookkeeping:
          $ref: "#/components/schemas/BookkeepingSpecification"

    BookkeepingSpecification:
      description: how payments of this product are put into bookkeeping.
      properties:
        taxPercentage:
          type: integer
          description: amount of VAT to be paid, in per cent points
        accountNumber:
          type: integer
          description: tilinumero in which payment is marked in bookkeeping
        costCentre:
          type: integer
          description: "kustannuspaikka"
        internalOrder:
          type: integer
          description: "sis√§inen tilaus"
        project:
          type: integer
          description: "projektinumero"
        functionalArea:
          type: integer
          description: "toimintoalue"

    Order:
      description: Information about a specific user's order of products.
      properties:
        id:
          type: string
        externalOrderIdentifier:
          type: string
          description: identifier for this order in other systems
        orderLines:
          type: array
          description: items included in this order
          items:
            type: object
            properties:
              productId:
                type: string
                description: which product is ordered
              quantity:
                type: number
                description: how many product units of the product are ordered
              priceExcludingTax:
                type: integer
                description: |
                  price of this order line, without tax, in euro cents.
                  The price is automatically calculated from quantity,
                  product's unitPrice and product's taxPercentage.
              priceIncludingTax:
                type: integer
                description: |
                  price of this order line, including tax, in euro cents.
                  The price is automatically calculated from quantity and
                  product's unitPrice.
        totalPrice:
          type: integer
          description: The total price of this order, including tax, in euro cents.
        status:
          type: string
          description: pending, paid, rejected, expired, ...
        infoText:
          type: string
          description: user-visible text about this order to show in payment
        orderCheckoutUrl:
          type: string
          description: |
            where to send the user for checking out (paying) this order.
            Generated by the webshop.
        postCheckoutReturnUrl:
          type: string
          description: |
            where to send the user after successful payment or
            rejection.  Provided by the service creating this order.

